*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="frmsettings.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "vfpalert.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmsettings AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHowTransparent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSound" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHowLong" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnWait" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSeconds" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnTrans" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPercent" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: validatesettings
		*m: writesettings
		*p: lform
		*p: lsound
		*p: ntransparency
		*p: nwait
		*p: oform
		*p: oparent
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	BackColor = 236,233,216
	BorderStyle = 2
	Caption = "Desktop Alert Settings"
	ControlBox = .T.
	DoCreate = .T.
	Height = 168
	Icon = settings.ico
	lform = .F.
	lsound = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmSettings"
	ntransparency = 20
	nwait = 10
	oform = .NULL.
	oparent = .NULL.
	ShowWindow = 2
	Width = 385

	ADD OBJECT 'chkSound' AS checkbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Play a sound when the Alert appears", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 12, ;
		Name = "chkSound", ;
		TabIndex = 7, ;
		Top = 84, ;
		Value = .F., ;
		Width = 195
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "Cancel", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 197, ;
		Name = "cmdCancel", ;
		TabIndex = 13, ;
		Top = 130, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "\<OK", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 118, ;
		Name = "cmdOK", ;
		TabIndex = 11, ;
		Top = 130, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lblHowLong' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "How long should the Desktop Alert appear on-screen?", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 12, ;
		Name = "lblHowLong", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 258, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblHowTransparent' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "How transparent should the Desktop Alert be?", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 12, ;
		Name = "lblHowTransparent", ;
		TabIndex = 4, ;
		Top = 48, ;
		Width = 222, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblPercent' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "percent", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 335, ;
		Name = "lblPercent", ;
		TabIndex = 6, ;
		Top = 47, ;
		Width = 39
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblSeconds' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "seconds", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 334, ;
		Name = "lblSeconds", ;
		TabIndex = 3, ;
		Top = 12, ;
		Width = 41
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		Height = 2, ;
		Left = 0, ;
		Name = "Shape1", ;
		SpecialEffect = 0, ;
		Top = 114, ;
		Width = 385
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'spnTrans' AS spinner WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 276, ;
		Name = "spnTrans", ;
		SpinnerHighValue = 80.00, ;
		SpinnerLowValue = 0.00, ;
		TabIndex = 5, ;
		Top = 43, ;
		Value = 20, ;
		Width = 50
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'spnWait' AS spinner WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 276, ;
		Name = "spnWait", ;
		SpinnerHighValue = 30.00, ;
		SpinnerLowValue = 3.00, ;
		TabIndex = 2, ;
		Top = 8, ;
		Value = 10, ;
		Width = 49
		*< END OBJECT: BaseClass="spinner" />
	
	PROCEDURE Destroy
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toManager AS Object, tlForm AS Boolean, toForm AS Object
		
		IF VARTYPE(toManager) == "O"
			This.oParent = toManager
		ENDIF
		
		** Since the Alert form's "Wait" timer is suspended when it
		** calls the Settings form, we'll set a couple of properties
		** and do a BINDEVENT to "restart" the Wait timer when this
		** form is destroyed.
		
		This.lForm = tlForm
		
		IF This.lForm	&& Came from an alert form
			IF VARTYPE(toForm) == "O"
				This.oForm = toForm
			ENDIF
		ENDIF		
		
		WITH THIS
			.Caption = DA_SETTINGS
			.lblHowLong.Caption = DA_LBLHOWLONG
			.lblSeconds.Caption = DA_LBLSECONDS
			.lblHowTransparent.Caption = DA_LBLHOWTRANSPARENT
			.lblPercent.Caption = DA_LBLPERCENT
			.chkSound.Caption = DA_CHKSOUND
			.cmdOK.Caption = DA_CMDOK
			.cmdCancel.Caption = DA_CMDCANCEL
		
			.spnWait.Value = .oParent.nWait
			.spnTrans.Value = .oParent.nPercent
			.chkSound.Value = .oParent.lSound
		ENDWITH
		
		IF This.lForm
			BINDEVENT(This,"Destroy",This.oForm,"StartWait")
		ENDIF	
	ENDPROC

	PROCEDURE validatesettings
		LOCAL llRetVal AS Boolean
		llRetVal = .F.
		
		IF BETWEEN(This.spnWait.Value,3,30)
			IF BETWEEN(This.spnTrans.Value,0,80)
				llRetVal = .T.
			ENDIF
		ENDIF		
			
		RETURN llRetVal	
	ENDPROC

	PROCEDURE writesettings
		LOCAL lnWait AS Integer, lnTrans AS Integer, llSound AS Boolean
		lnWait = This.spnWait.Value
		lnTrans = This.spnTrans.Value
		llSound = This.chkSound.Value
		
		WITH This.oParent
			.nWait = lnWait
			.nPercent = lnTrans
			.lSound = llSound
			
			** We'll set the AlertManager's lWriteSettings
			** property to .T. It has an Assign method
			** which will call the AlertManager's 
			** WriteSettings() method.
			.lWriteSettings = .T.
		ENDWITH	
			
	ENDPROC

	PROCEDURE cmdCancel.Click
		ThisForm.Release()
	ENDPROC

	PROCEDURE cmdOK.Click
		IF ThisForm.ValidateSettings()
			ThisForm.WriteSettings()
			ThisForm.Release()
		ENDIF	
		
	ENDPROC

ENDDEFINE
